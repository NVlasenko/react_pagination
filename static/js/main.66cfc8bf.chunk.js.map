{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","pageNumber","active","id","concat","length","items","from","to","numbers","n","push","getNumbers","index","name","App","numbersOfPages","setNumbersOfPages","useState","itemsPerPages","setItemsPerPages","setCurrentPage","pageNumbers","Array","_","defaultValue","onChange","event","selectedValue","target","value","Math","ceil","htmlFor","page","slice","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66cfc8bf.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: { id: number }[];\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => {},\n}) => (\n\n  <ul className=\"pagination\">\n    <li\n      className={cn('page-item',\n        { disabled: currentPage === 1 })}\n    >\n      <a\n        data-cy=\"prevLink\"\n        className=\"page-link\"\n        href=\"#prev\"\n        aria-disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        «\n      </a>\n    </li>\n\n    {total.map(pageNumber => (\n      <li\n        className={cn('page-item',\n          { active: currentPage === pageNumber.id })}\n        key={pageNumber.id}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className={`page-link ${currentPage === total.length ? 'disabled' : ''}`}\n          href={`#${pageNumber.id}`}\n          onClick={() => onPageChange(pageNumber.id)}\n        >\n          {pageNumber.id}\n        </a>\n      </li>\n    ))}\n\n    <li\n      className={cn('page-item',\n        { disabled: currentPage === total.length })}\n    >\n      <a\n        data-cy=\"nextLink\"\n        className=\"page-link\"\n        href=\"#next\"\n        aria-disabled={currentPage === perPage}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        »\n      </a>\n    </li>\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map((n, index) => ({ name: `Item ${n}`, id: index }));\n\nexport const App: React.FC = () => {\n  const [numbersOfPages, setNumbersOfPages] = useState(9);\n  const [itemsPerPages, setItemsPerPages] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageNumbers = Array\n    .from({ length: numbersOfPages }, (_, index) => ({ id: index + 1 }));\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = +(event.target.value);\n\n    setItemsPerPages(selectedValue);\n    setNumbersOfPages(Math.ceil(items.length / selectedValue));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${((currentPage - 1) * itemsPerPages) + 1} - ${itemsPerPages * currentPage > 42 ? 42 : itemsPerPages * currentPage} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={itemsPerPages}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={pageNumbers}\n        perPage={numbersOfPages}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {items.slice((currentPage - 1) * itemsPerPages,\n          (currentPage - 1) * itemsPerPages + itemsPerPages)\n          .map((item) => (\n            <li key={item.id} data-cy=\"item\">{item.name}</li>\n          ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}